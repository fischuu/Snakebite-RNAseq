# vim: set filetype=sh :

rule R_finalReport:
    """
    Create the final report (R).
    """
    input:
        script=config["report-script"],
        mqcraw="%s/QC/RAW/multiqc_R1/" % (config["project-folder"]),
        mqcconcatenated="%s/QC/CONCATENATED/multiqc_R1/" % (config["project-folder"]),
        mqctrimmed="%s/QC/TRIMMED/multiqc_R1/" % (config["project-folder"]),
        fcquant=expand("%s/FeatureCounts/Stringtie/{samples}_fc.txt" % (config["project-folder"]), samples=samples),
        fcquantAnnot=expand("%s/FeatureCounts/Annot/{samples}_fc.txt" % (config["project-folder"]), samples=samples)
    output:
        "%s/finalReport.html" % (config["project-folder"])
    log:
        "%s/logs/R/finalReport.log" % (config["project-folder"])
    benchmark:
        "%s/benchmark/R/finalReport.benchmark.tsv" % (config["project-folder"])
    singularity: config["singularity"]["report"]
    params:
       projFolder=config["project-folder"],
       pipeFolder=config["pipeline-folder"],
       pipeConfig=config["pipeline-config"],
       refAnnot.file=config["annot"]
    shell:"""
       R -e "projFolder <- '{params.projFolder}'; \
             pipelineFolder <- '{params.pipeFolder}'; \
             pipelineConfig <- '{params.pipeConfig}'; \
             refAnnot.file <- '{params.refAnnot.file}'; \
             snakemake <- TRUE;\
             rmarkdown::render('{input.script}',output_file='{output}')" &> {log}
    """